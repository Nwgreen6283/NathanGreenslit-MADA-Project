---
title: "env_and_copies_stats"
format:
  html:
    theme: default
---

**This code runs uni-variate models on parameters of interest.**

# Getting Started

#### Libraries

```{r, include = FALSE}
library(tidyverse)
library(here)
library(Hmisc) #For lag function
library(tidymodels) #For modeling
library(ggpmisc) #For R2 equation on graph
library(dotwhisker) #Fpr visualization
library(ggpubr) #For plot stacking
```

#### Data

```{r, include = FALSE}
dust0<- read_csv(here("data", "processed_data","dust_master.csv")) #Different Dust permutations
data0<- read_csv(here("data", "processed_data", "tx_master.csv")) #Master Data containing copies_mL and nutrients 
```

# Cleaning

### Clean and Trim

```{r}
dust<- dust0 %>%
  filter(!is.na(date),
         date %in% as.Date("2022-07-04"):as.Date("2022-07-19")) #%>%
  #mutate(t7sum = log10(t7sum)) #Log transform Dust conc (as it is not normal) 


data<- data0 %>%
  filter(date %in% as.Date("2022-07-04"):as.Date("2022-07-19"))
```

### Combine into one big data set

```{r}
master0<- 
  dust %>% full_join(data) %>%
  filter(hr_cst %in% "01") #While this is technically not for hour 1, this gets ride of all duplicates for the sake of analysis.
master<- master0[c(1,8,14,34)] #Select columns of interest

#View new dataframe
master

```

### Make Site DF

**Need to include 7/5 and 7/6 for previous dust data (will be used for lag analysis)**

```{r}
bo<- master %>%
  filter(site %in% "Blind Oso"| date %in% c( as.Date("2022-07-05"), as.Date("2022-07-06")))

c2<- master %>%
  filter(site %in% "Canals"| date %in% c( as.Date("2022-07-05"), as.Date("2022-07-06")))

rd<- master %>%
  filter(site %in% "Gulf"| date %in% c(as.Date("2022-07-05"), as.Date("2022-07-06")))
```

# DUST

#### Add Lag from `2_cca.qmd`

```{r}
bo2<- bo %>% mutate(
  lag =Lag(bo$t7sum, shift  = 1)) %>% #Make lag from ccf
filter(between(date, as.Date('2022-07-07'), as.Date('2022-07-19')))

c22<- c2%>% mutate(
  lag =Lag(c2$t7sum, shift  = 2)) %>% #Make lag from ccf
filter(between(date, as.Date('2022-07-07'), as.Date('2022-07-19')))

rd2<- rd%>% mutate(
  lag =Lag(rd$t7sum, shift  = 1)) %>% #Make lag from ccf
filter(between(date, as.Date('2022-07-07'), as.Date('2022-07-19')))
```

#### Plot

```{r}
bo2 %>% ggplot(aes(x = lag, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_correlation(method = "spearman")+
  labs(title = "LM DustxCopies (BO+1)",
       x = "log(dust)")
 c22 %>% ggplot(aes(x = lag, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_correlation(method = "spearman")+
  labs(title = "LM DustxCopies (C2+2)",
       x = "log(dust)")
 rd2 %>% ggplot(aes(lag, copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_correlation(method = "spearman")+
  labs(title = "LM DustxCopies (RD+1)",
       x = "log(dust)")

```

#### Stac

```{r}
ggarrange(fig1, fig2, fig3 + font("x.text", size = 10), ncol = 1, nrow = 3)
```

## Null Model:

#### 5-Fold Cross Validation

```{r}
fold_bo <- vfold_cv(bo2, v = 5, repeats = 5) #Data was too small to stratify (<20)
fold_c2 <- vfold_cv(c22, v = 5, repeats = 5) #Data was too small to stratify (<20)
fold_rd <- vfold_cv(rd2, v = 5, repeats = 5) #Data was too small to stratify (<20)
```

#### Create Null Model

```{r}
#Create Null Recipe for Growth at all three sites
null_bo<- recipe(copies_mL ~ 1, data = bo2) 
null_c2<- recipe(copies_mL ~ 1, data = c22)
null_rd<- recipe(copies_mL ~ 1, data = rd2)

#Set up linear model
lm_mod<- linear_reg() %>%
  set_engine("lm") %>%
  set_mode("regression")

#Workflow that adds recipe to model for three sites
null_wflow_bo<- 
  workflow() %>%
  add_model(lm_mod) %>%
  add_recipe(null_bo)

null_wflow_c2<- 
  workflow() %>%
  add_model(lm_mod) %>%
  add_recipe(null_c2)

null_wflow_rd<- 
  workflow() %>%
  add_model(lm_mod) %>%
  add_recipe(null_rd)

#Use workflow to fit model to  data set
null_fit_bo<-
  fit_resamples(null_wflow_bo, resamples = fold_bo)

null_fit_c2<-
  fit_resamples(null_wflow_c2, resamples = fold_c2)
                
null_fit_rd<-
  fit_resamples(null_wflow_rd, resamples = fold_rd)
```

#### Get Metrics for Null

##### RMSE

```{r}
null_met_bo <- 
  collect_metrics(null_fit_bo)

null_met_c2 <- 
  collect_metrics(null_fit_c2)

null_met_rd <- 
  collect_metrics(null_fit_rd)

null_met_bo
null_met_c2
null_met_rd
```

##### AIC

```{r}
bo_null_mod<- 
  lm(copies_mL ~ 1, data = bo2)
AIC(bo_null_mod)

c2_null_mod<- 
  lm(copies_mL ~ 1, data = c22)
AIC(c2_null_mod)

rd_null_mod<- 
  lm(copies_mL ~ 1, data = rd2)
AIC(rd_null_mod)
```

We will come back to these metrics once we run the models on our actual data.

## Actual Data for Model

#### Create Linear Model

##### BLIND OSO:

```{r}
#Create Recipe for Growth 
growth_recipe_bo<- recipe(copies_mL ~ lag, data = bo2)

#Set up linear model
lm_mod<- linear_reg() %>%
  set_engine("lm") %>%
  set_mode("regression")

#Workflow that adds recipe to model
Growth_wflow<- 
  workflow() %>%
  add_model(lm_mod) %>%
  add_recipe(growth_recipe_bo)

#Use workflow to fit model to  data set
growth_fit_bo<- Growth_wflow %>%
  fit(data = bo2)

#View as Tibble 
growth_fit_bo %>%
  extract_fit_parsnip() %>%
  tidy()
```

##### CANALS:

```{r}
#Create Recipe for Growth 
growth_recipe_c2<- recipe(copies_mL ~ lag, data = c22)

#Set up linear model
lm_mod<- linear_reg() %>%
  set_engine("lm") %>%
  set_mode("regression")

#Workflow that adds recipe to model
Growth_wflow<- 
  workflow() %>%
  add_model(lm_mod) %>%
  add_recipe(growth_recipe_c2)

#Use workflow to fit model to  data set
growth_fit_c2<- Growth_wflow %>%
  fit(data = c22)

#View as Tibble 
growth_fit_c2 %>%
  extract_fit_parsnip() %>%
  tidy()
```

##### GULF:

```{r}
#Create Recipe for Growth 
growth_recipe_rd<- recipe(copies_mL ~ lag, data = rd2)

#Set up linear model
lm_mod<- linear_reg() %>%
  set_engine("lm") %>%
  set_mode("regression")

#Workflow that adds recipe to model
Growth_wflow<- 
  workflow() %>%
  add_model(lm_mod) %>%
  add_recipe(growth_recipe_rd)

#Use workflow to fit model to  data set
growth_fit_rd<- Growth_wflow %>%
  fit(data = rd2)

#View as Tibble 
growth_fit_rd %>%
  extract_fit_parsnip() %>%
  tidy()
```

#### Metrics

##### RMSE and R2

```{r}
aug_test_bo <- augment(growth_fit_bo, bo2)
rmse <- aug_test_bo %>% rmse(truth = copies_mL, .pred)
rsq <- aug_test_bo %>% rsq(truth = copies_mL, .pred)
bo_metrics<- full_join(rmse, rsq)
bo_metrics

aug_test_c2 <- augment(growth_fit_c2, c22)
rmse <- aug_test_c2 %>% rmse(truth = copies_mL, .pred)
rsq <- aug_test_c2 %>% rsq(truth = copies_mL, .pred)
c2_metrics<- full_join(rmse, rsq)
c2_metrics

aug_test_rd <- augment(growth_fit_rd, rd2)
rmse <- aug_test_rd %>% rmse(truth = copies_mL, .pred)
rsq <- aug_test_rd %>% rsq(truth = copies_mL, .pred)
rd_metrics<- full_join(rmse, rsq)
rd_metrics

```

##### AIC

Approaches based on such selection criteria essentially try to guess how the model would perform if it were to be fit to new data, without actually trying to do it (in contrast to CV). For AIC, a rule of thumb is that a difference of 10 between 2 models is meaningful.

```{r}
bo_mod<- lm(copies_mL ~ lag, data = bo2)
AIC(bo_mod)

c2_mod<- lm(copies_mL ~ lag, data = c22)
AIC(c2_mod)

rd_mod<- lm(copies_mL ~ lag, data = rd2)
AIC(rd_mod)
```

#### Plot Residuals

```{r}
res_bo<- resid(bo_mod)
plot(fitted(bo_mod), res_bo)
abline(0,0) 
 
res_c2<- resid(c2_mod)
plot(fitted(c2_mod), res_c2)
abline(0,0)

res_rd<- resid(rd_mod)
plot(fitted(rd_mod), res_rd)
abline(0,0)
```

## Conclusion

| Site | Model Type | RMSE     | AIC      |
|------|------------|----------|----------|
| BO   | Null       | 20472.82 | 275.9331 |
| BO   | Actual     | 14422.91 | 269.8923 |
| C2   | Null       | 8472.898 | 253.1876 |
| C2   | Actual     | 5191.22  | 245.3679 |
| RD   | Null       | 50386.56 | 296.9821 |
| RD   | Actual     | 36132.11 | 291.933  |

AIC and RMSE are lower (better performance) than the null.

<!--# Why are these so high? -->

# OTHER ENVIRONMENTAL PARAMETERS

<!--# Is there a lag for Nutrient data too? -->

<!--# Need to change R2 input here too -->

## Create New Master Data set

```{r}
master2<- 
  master0 %>%
  select(copies_mL,sal,temp,site, amm, orthop, doc, don, tn, do_mgl, nn, sil, din_dip, tdn, toc, pH) #Select parameters of interest

#Make Site Specific DF
b<- 
  master2 %>%
  filter(site %in% "Blind Oso")

c<- 
  master2 %>%
  filter(site %in% "Canals")

r<- 
  master2 %>%
  filter(site %in% "Gulf")
```

## Plot

#### Temperature

```{r}
b %>% ggplot(aes(x = temp, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = temp, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM TempxCopies (BO)")

c %>% ggplot(aes(x = temp, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = temp, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM TempxCopies (C2)")

r %>% ggplot(aes(x = temp, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = temp, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM TempxCopies (RD)")
```

#### Salinity

```{r}
b %>% ggplot(aes(x = sal, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = sal, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM salxCopies (BO)")

c %>% ggplot(aes(x = sal, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = sal, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM salxCopies (C2)")

r %>% ggplot(aes(x = sal, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = sal, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM salxCopies (RD)")
```

#### Ammonia

```{r}
b %>% ggplot(aes(x = amm, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = amm, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM ammxCopies (BO)")

c %>% ggplot(aes(x = amm, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = amm, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM ammxCopies (C2)")

r %>% ggplot(aes(x = amm, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = amm, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM ammxCopies (RD)")
```

#### Orthophosphate

```{r}
b %>% ggplot(aes(x = orthop, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = orthop, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM orthopxCopies (BO)")

c %>% ggplot(aes(x = orthop, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = orthop, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM orthopxCopies (C2)")

r %>% ggplot(aes(x = orthop, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = orthop, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM orthopxCopies (RD)")
```

#### DOC

```{r}
b %>% ggplot(aes(x = doc, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = doc, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM docxCopies (BO)")

c %>% ggplot(aes(x = doc, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = doc, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM docxCopies (C2)")

r %>% ggplot(aes(x = doc, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = doc, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM docxCopies (RD)")
```

#### DON

```{r}
b %>% ggplot(aes(x = don, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = don, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM donxCopies (BO)")

c %>% ggplot(aes(x = don, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = don, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM donxCopies (C2)")

r %>% ggplot(aes(x = don, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = don, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM donxCopies (RD)")
```

#### Total Nitrogen

```{r}
b %>% ggplot(aes(x = tn, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = tn, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM tnxCopies (BO)")

c %>% ggplot(aes(x = tn, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = tn, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM tnxCopies (C2)")

r %>% ggplot(aes(x = tn, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = tn, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM tnxCopies (RD)")
```

#### DO

```{r}
b %>% ggplot(aes(x = do_mgl, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = do_mgl, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM do_mglxCopies (BO)")

c %>% ggplot(aes(x = do_mgl, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = do_mgl, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM do_mglxCopies (C2)")

r %>% ggplot(aes(x = do_mgl, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = do_mgl, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM do_mglxCopies (RD)")
```

#### NN

```{r}
b %>% ggplot(aes(x = nn, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = nn, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM nnxCopies (BO)")

c %>% ggplot(aes(x = nn, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = nn, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM nnxCopies (C2)")

r %>% ggplot(aes(x = nn, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = nn, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM nnxCopies (RD)")
```

#### Silicate

```{r}
b %>% ggplot(aes(x = sil, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = sil, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM silxCopies (BO)")

c %>% ggplot(aes(x = sil, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = sil, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM silxCopies (C2)")

r %>% ggplot(aes(x = sil, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = sil, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM silxCopies (RD)")
```

#### DIN:DIP

```{r}
b %>% ggplot(aes(x = din_dip, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = din_dip, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM din_dipxCopies (BO)")

c %>% ggplot(aes(x = din_dip, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = din_dip, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM din_dipxCopies (C2)")

r %>% ggplot(aes(x = din_dip, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = din_dip, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM din_dipxCopies (RD)")
```

#### TDN

```{r}
b %>% ggplot(aes(x = tdn, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = tdn, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM tdnxCopies (BO)")

c %>% ggplot(aes(x = tdn, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = tdn, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM tdnxCopies (C2)")

r %>% ggplot(aes(x = tdn, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = tdn, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM tdnxCopies (RD)")
```

#### TOC

```{r}
b %>% ggplot(aes(x = toc, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = toc, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM tocxCopies (BO)")

c %>% ggplot(aes(x = toc, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = toc, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM tocxCopies (C2)")

r %>% ggplot(aes(x = toc, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = toc, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM tocxCopies (RD)")
```

#### pH

```{r}
b %>% ggplot(aes(x = pH, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = pH, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM pHxCopies (BO)")

c %>% ggplot(aes(x = pH, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = pH, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM pHxCopies (C2)")

r %>% ggplot(aes(x = pH, y = copies_mL)) +
  geom_point() +
  stat_smooth(method = "lm")+
  stat_poly_eq(aes(x = pH, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM pHxCopies (RD)")
```
