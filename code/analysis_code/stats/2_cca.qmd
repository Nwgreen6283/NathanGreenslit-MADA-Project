---
title: "cca"
format:
  html:
    theme: default
---

**This code is for running cross-correlation analyses to assess significant lag in our time series.**

# Getting Started

#### Libraries

```{r, include = FALSE}
library(tidyverse)
library(here)
```

#### Data

```{r, include = FALSE}
dust0<- read_csv(here("data", "processed_data","dust_master.csv")) #Different Dust permutations
data0<- read_csv(here("data", "processed_data", "tx_master.csv")) #Master Data containing copies_mL
```

# Cleaning

### Clean and Trim

```{r}
dust<- dust0 %>%
  filter(!is.na(date),
         date %in% as.Date("2022-07-04"):as.Date("2022-07-19")) %>%
  mutate(t7sum = log10(t7sum)) #Log transform Dust conc (as it is not normally distributed) 


data<- data0 %>%
  filter(date %in% as.Date("2022-07-04"):as.Date("2022-07-19"))
```

### Combine into one big data set

```{r}
master0<- 
  dust %>% full_join(data) %>%
  filter(hr_cst %in% "01") #While this is technically not for hour 1, this gets ride of all duplicates for the sake of analysis.
master<- master0[c(1:9,14,32)]

```

### Make data frames for the three sites

Because we are working with lags. We need to include dust data from a few days [prior]{.ul} to sampling, as the dust concentrations will have an impact on Vibrio growth 1-2 days later.

```{r}
bo<- master %>%
  filter(site %in% "Blind Oso"| date %in% c( as.Date("2022-07-05"), as.Date("2022-07-06")))

c2<- master %>%
  filter(site %in% "Canals"| date %in% c( as.Date("2022-07-05"), as.Date("2022-07-06")))

rd<- master %>%
  filter(site %in% "Gulf"| date %in% c(as.Date("2022-07-05"), as.Date("2022-07-06")))
```

# Cross-correlation Analysis

From previous literature, we know that Vibrio have responded to dust 24-48 hours after input. This can make analysis tricky, as the dust concentration of a specific day does not necessarily correlate with the Vibrio copies of that same date. We can use cross-correlation analysis to assess a lag in a time series and see where this lag is most significant.

-   For this, we cannot have NAs so we choose the strict daily time series (7/7 - 7/19). We will use the data frames made above for creating the appropriate lag later.

-   Remember that dust is log transformed

```{r}
#Blind Oso
bo_ccf<- bo %>%
  filter(between(date, as.Date('2022-07-07'), as.Date('2022-07-19'))) 
ccf(bo_ccf$t7sum, bo_ccf$copies_mL) #CCA between dust and copies_mL
title("Blind Oso DustxCopies CCA", line =1)

#Canals
c2_ccf<- c2 %>%
  filter(between(date, as.Date('2022-07-07'), as.Date('2022-07-19')))
ccf(c2_ccf$t7sum, c2_ccf$copies_mL)
title("Canals DustxCopies CCA", line=1)

#Gulf
rd_ccf<- rd %>%
  filter(between(date, as.Date('2022-07-07'), as.Date('2022-07-19')))
ccf(rd_ccf$t7sum, rd_ccf$copies_mL) 
title("Gulf DustxCopies CCA", line =1)
```

**A negative Lag value indicates that x is a predictor of y, or in this case, dust is a predictor of copies_mL- so we will be looking at these negative values. A positive ACF indicates a positive relationship between the two variables, where a negative ACF indicates a negative relationship. According to the ccf plots, BO has a significant lag relationship a value of -1. In other words, dust occurs, and one day later, we see a response in copies_mL. C2 has a lag at -2, and RD at -1**

| Site | Lag |
|------|-----|
| BO   | 1   |
| C2   | 2   |
| RD   | 1   |

: \*[**One important thing to note**]{.ul}: Our data set contains dust data for all of 2022. Our copies_mL data only contains values from 7/7/22 --> 7/19/22. We cannot have NAs when running CCA, therefore, these CCA were made with only this time series. This limits our analysis, as we have dust data prior that can explain copies_mL on the earlier dates 7/7 or 7/8. But we cannot incorporate this into the CCA as we have NA for copies_mL for those early days. Below we will run linear models that DO contain these prior dust days. And since we have identified a lag, we can shift the dust data to line up with the copies_mL that it corresponds with directly - and we no longer have NAs. But this ultimately means that the lag identified above may not be the best fit for our model below, so some additional work is needed that tests other lags in the code. Using a combination of visualization and CCA would be helpful.

<!--# May need to include nutrient data for cca -->
