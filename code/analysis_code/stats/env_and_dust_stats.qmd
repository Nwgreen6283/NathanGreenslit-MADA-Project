---
title: "env_and_copies_stats"
format:
  html:
    theme: default
---
### Libraries
```{r}
library(tidyverse)
library(here)
library(Hmisc) #For lag function
library(tidymodels) #For modeling
library(ggpmisc) #For R2 equation on graph
```

# LOADING AND CLEANING DATA

### Data
```{r}
dust<- read_csv(here("data", "processed_data","dust_master.csv")) #Different Dust attributes
data<- read_csv(here("data", "processed_data", "tx_master.csv")) #Master Data
```

### Clean and Trim
```{r}
dust<- dust %>%
  filter(!is.na(date),
         date %in% as.Date("2022-07-07"):as.Date("2022-07-19")) %>%
  select_if(~ !any(is.na(.))) #Removes columns with NA


data<- data %>%
  filter(date %in% as.Date("2022-07-07"):as.Date("2022-07-19"))
```

### Combine into one big data set
```{r}
master<- 
  dust %>% left_join(data) %>%
  filter(hr_cst %in% "01") #While this is technically not for hour 1, this gets ride of all duplicates for the sake of analaysis. 
```

### Make Site DF
```{r}
bo<- master %>%
  filter(site %in% "Blind Oso")

c2<- master %>%
  filter(site %in% "Canals")

rd<- master %>%
  filter(site %in% "Gulf")
```

#DUST

**From previous literature, we know that Vibrio have responded to dust 24-48 hours after input. This can make analysis tricky, as the dust concentration of a specific day does not necessarily correlate with the Vibrio copies of that same date. We can use cross-correlation analysis to assess a lag in a time series and see where this lag is most significant.**

### Cross-correlation:
```{r}
#Blind Oso
ccf(bo$t7sum, bo$copies_mL) 

#Canals
ccf(c2$t7sum, c2$copies_mL) 

#Gulf
ccf(rd$t7sum, rd$copies_mL) 
```
**From exploratory analysis, we know that the Gulf had a dramatic response, so let's look at that site first. Lag is greatest at +2 and -1. We need to choose +2 (where dust predicts copies). -1 would be the other way around, where copies predict dust. This is not logical.**

## Gulf Site Dust 

### Adding a 2 day lag in dust:
```{r}
rd2<- rd%>% mutate(
  lag =Lag(rd$t7sum, shift  = 2)) #Make lag from ccf
```

### Create a linear Model: 
```{r}
lm_spec<- linear_reg()
lm_fit<- fit(lm_spec, copies_mL~lag, data = rd2)
tidy(lm_fit)
```

### Plot RD T7 Sum:
```{r}
rd2 %>% ggplot() + geom_point(
  aes(x = lag, 
      y = copies_mL)) +
  geom_smooth(aes(x = lag,
                  y = copies_mL),
              method = "lm")+
  stat_poly_eq(aes(x = lag, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM DustxCopies (RD)")
```
## BO Site Dust 

### Adding a 2 day lag in dust:
```{r}
bo2<- bo%>% mutate(
  lag =Lag(bo$t7sum, shift  = 1)) #Make lag from ccf
```

### Create a linear Model: 
```{r}
lm_spec<- linear_reg()
lm_fit<- fit(lm_spec, copies_mL~lag, data = bo2)
tidy(lm_fit)
```

### Plot BO T7 Sum:
```{r}
bo2 %>% ggplot() + geom_point(
  aes(x = lag, 
      y = copies_mL)) +
  geom_smooth(aes(x = lag,
                  y = copies_mL),
              method = "lm")+
  stat_poly_eq(aes(x = lag, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM DustxCopies (BO)")
```
## C2 Site Dust 

### Adding a 2 day lag in dust:
```{r}
c22<- c2%>% mutate(
  lag =Lag(c2$t7sum, shift  = 2)) #Make lag from ccf
```

### Create a linear Model: 
```{r}
lm_spec<- linear_reg()
lm_fit<- fit(lm_spec, copies_mL~lag, data = c22)
tidy(lm_fit)
```

### Plot C2 T7 Sum:
```{r}
c22 %>% ggplot() + geom_point(
  aes(x = lag, 
      y = copies_mL)) +
  geom_smooth(aes(x = lag,
                  y = copies_mL),
              method = "lm")+
  stat_poly_eq(aes(x = lag, y = copies_mL),
               rr.digits = 4) +
  labs(title = "LM DustxCopies (C2)")
```