---
title: "Copies/mL"
format:
  html:
    theme: default
---
*This script takes Cq value outputs from the CFX and computes it to copies of gene targets of Vibrio*

Libraries
```{r}
library(tidyverse)
library(here)
```

Load data
```{r}
data <-read_csv(here("data", "raw_data", "copies_master.csv"))
```

Select and Filter for Daily and Monthly Time Series 
```{r}
daily<- data %>%
select(Type,Sample, Cq) %>%
  filter(Type %in% "Daily")

monthly<- data %>%
select(Type,Sample, Cq) %>%
  filter(Type %in% "Monthly")
```

Create Site Column from Sample Name 
```{r}
site_daily<- daily %>%
  mutate(site = substr(daily$Sample,1,2)) #Creates new column `Site` from the first two letters in `Sample` (BO16 becomes BO)

site_monthly<- monthly %>%
  mutate(site = substr(monthly$Sample,1,2)) #Creates new column `Site` from the first two letters in `Sample` (BO16 becomes BO)
```

Add Dilution Column and Filter column
```{r}
dilution_daily<- site_daily %>%
  mutate(dilution = case_when(
                          Sample == "BO7"~"10",
                          Sample == "BO8"~"10",
                          Sample == "BO9"~"10",
                          Sample == "BO11"~"10",
                          Sample == "BO12"~"10",
                          Sample == "BO13"~"10",
                          Sample == "BO14"~"10",
                          Sample == "BO15"~"10",
                          Sample == "BO16REDO"~"1",
                          Sample == "BO17"~"10",
                          Sample == "BO18"~"10",
                          Sample == "BO19"~"10",
                              site  == "C2"~ "1",
                              site == "RD"~"1"), 
        dilution = as.numeric(dilution)) 


dilution_monthly<- site_monthly %>%
  mutate(dilution = case_when(
                              site == "BO"~ "1",
                              site  == "C2"~ "1",
                              site == "RD"~"1"), 
        dilution = as.numeric(dilution))


filter_daily<- dilution_daily %>%
   mutate(filter_amt = case_when(Sample == "BO_7"~"100",
                          Sample == "BO7"~"100",
                          Sample == "BO8"~"100",
                          Sample == "BO9"~"100",
                          Sample == "BO11"~"100",
                          Sample == "BO12"~"50",
                          Sample == "BO13"~"50",
                          Sample == "BO14"~"50",
                          Sample == "BO15"~"50",
                          Sample == "BO16REDO"~"30",
                          Sample == "BO17"~"30",
                          Sample == "BO18"~"30",
                          Sample == "BO19"~"30",
                              site  == "C2"~ "100",
                              site == "RD"~"100"),
        filter_amt = as.numeric(filter_amt)) 

filter_monthly<- dilution_monthly %>%
   mutate(filter_amt = case_when(Sample == "BO_7"~"100",
                          Sample == "BO_FEB"~"100",
                          Sample == "BO_MAR"~"100",
                          Sample == "BO_APR"~"100",
                          Sample == "BO_MAY_11"~"100",
                          Sample == "BO_MAY_20"~"100",
                          Sample == "BO_MAY_24"~"100",
                          Sample == "BO_JUN"~"100",
                          Sample == "BO_AUG"~"30",
                          Sample == "BO_SEP"~"45",
                          Sample == "BO_OCT"~"60",
                          Sample == "BO_NOV"~"30",
                          Sample == "BO_DEC"~"60",
                              site  == "C2"~ "100",
                              site == "RD"~"100"),
        filter_amt = as.numeric(filter_amt)) 
```


Go from CQ --> Copies/mL
```{r}
copies_daily<- filter_daily %>%
    mutate(
    log_sq = ((Cq-36.114)/-3.3844), #Equation of the line to get log(SQ)
    sq = 10^log_sq, #Unlog 
    copies_rxn = sq*10, #SQ*Reaction Volume
    copies_uL_1_10 = copies_rxn/2.5, #Copies/RXN / DNA Template Volume
    copies_uL_extract = copies_uL_1_10 *dilution, #(Copies/uL of 1:10)*(1 if there was no sample dilution // *10 if there was a 1:10 dilution etc.)
    concentration_factor = 100/filter_amt, #(Concentration factor = amount of eluted DNA from ZYMO) / (filter amount from vacuum filtration)
    copies_mL = copies_uL_extract*concentration_factor) %>%
    
  select(Sample,copies_mL,site,Type)

copies_monthly<- filter_monthly %>%
    mutate(
    log_sq = ((Cq-36.114)/-3.3844), #Equation of the line to get log(SQ)
    sq = 10^log_sq, #Unlog 
    copies_rxn = sq*10, #SQ*Reaction Volume
    copies_uL_1_10 = copies_rxn/2.5, #Copies/RXN / DNA Template Volume
    copies_uL_extract = copies_uL_1_10 *dilution, #(Copies/uL of 1:10)*(1 if there was no sample dilution // *10 if there was a 1:10 dilution etc.)
    concentration_factor = 100/filter_amt, #(Concentration factor = amount of eluted DNA from ZYMO) / (filter amount from vacuum filtration)
    copies_mL = copies_uL_extract*concentration_factor) %>%
    
 select(Sample,copies_mL,Type, site)

```


Replace NaN with 0 for copies/mL
```{r}
replace_daily<- copies_daily %>% 
 mutate(copies_mL = ifelse(is.na(copies_mL), 0, copies_mL)) %>%
filter(!is.na(Sample))   #Dropping NAs from STD Curve 

replace_monthly<- copies_monthly %>% 
 mutate(copies_mL = ifelse(is.na(copies_mL), 0, copies_mL)) %>%
filter(!is.na(Sample))   #Dropping NAs from STD Curve 
```

Date Column
```{r}
date_daily<- replace_daily %>%
  mutate(day = substr(replace_daily$Sample,3,4)) %>% #Creates new column `day` 
  mutate(date = case_when(day == "7"~"2022-07-07", #Makes date based off of day
                          day == "7R"~"2022-07-07",
                         day ==  "8"~"2022-07-08",
                         day ==  "9"~"2022-07-09",
                         day ==  "11"~"2022-07-11",
                         day ==  "12"~"2022-07-12",
                         day ==  "13"~"2022-07-13",
                         day ==  "14"~"2022-07-14",
                         day ==  "15"~"2022-07-15",
                         day ==  "16"~"2022-07-16",
                         day ==  "17"~"2022-07-17",
                         day ==  "18"~"2022-07-18",
                         day ==  "19"~"2022-07-19")) %>%
  select(copies_mL,site,date,Type)

date_monthly<- replace_monthly %>%
  mutate(month = substr(replace_monthly$Sample,4,9)) %>% #Creates new column `month` 
  mutate(date = case_when(month == "FEB"~"2022-02-16", #Makes date based off of day
                         month ==  "MAR"~"2022-03-09",
                         month ==  "APR"~"2022-04-20",
                         month ==  "MAY_11"~"2022-05-11",
                         month ==  "MAY_20"~"2022-05-20",
                         month ==  "MAY_24"~"2022-05-24",
                         month ==  "JUN"~"2022-06-14",
                         month ==  "AUG"~"2022-08-09",
                         month ==  "SEP"~"2022-09-13",
                         month ==  "OCT"~"2022-10-18",
                         month ==  "NOV"~"2022-11-15",
                         month ==  "DEC"~"2022-12-14")) %>%
  select(copies_mL,site,date,Type)

```


Take the average of qPCR triplicates 
```{r}
final_daily<- date_daily %>% group_by(date,site,Type) %>% #Group all chr together. All that should be left out is the numeric vector we want to work with (in this case, copies_mL)
  summarize_if(is.numeric, mean) %>%
  ungroup() #Ungroup to spit everything back out


final_monthly<- date_monthly %>% group_by(date,site,Type) %>% #Group all chr together. All that should be left out is the numeric vector we want to work with (in this case, copies_mL)
 summarize_if(is.numeric, mean) %>%
  ungroup() #Ungroup to spit everything back out
```



Combine Daily and Monthly 
```{r}
copies_final<- full_join(final_monthly,final_daily)
summary(copies_final)
str(copies_final)
```


Save as RDS and CSV
```{r}
saveRDS(copies_final, file= here("data","processed_data","total_clean_copies.rds"))
write.csv(copies_final,file= here("data","processed_data","total_clean_copies.csv")) 

```

