---
title: "Vv caluclator"
format:
  html:
    theme: default
---
*This dataset is Daily Vv qPCR*

Libraries
```{r}
library(tidyverse)
library(here)
library(ggpubr)
```

Load data
```{r}
sq <-read_csv(here("data", "raw_data", "vv_run_daily_TX_dust_2_7_23 -  Quantification Summary.csv")) 
redo<- read_csv(here("data", "raw_data", "vv_run_daily_TX_dust_2_9_23 -  Quantification Summary.csv")) 
```

Filter for HEX dye (samples). Cy5 is for IAC
```{r}
sq2<- sq %>% 
  select(SQ,Cq, Sample, Fluor) %>%
  filter(Fluor %in% "HEX")

redo2<- redo %>% 
  select(Cq, Sample, Fluor, Well) %>%
  filter(Fluor %in% "HEX",
        !Well %in% "K19") #This triplicate amplified 

```


Create Site Column from Sample Name 
```{r}
site<- sq2 %>%
  mutate(site = substr(sq2$Sample,1,2)) #Creates new column `Site` from the first two letters in `Sample` (BO16 becomes BO)

site_redo<- redo2 %>%
  mutate(site = substr(redo2$Sample,1,2)) #Creates new column `Site` from the first two letters in `Sample` (BO16 becomes BO)

```

Add Dilution Column and Filter column
```{r}
dilution<- site%>%
  mutate(dilution = case_when(site == "BO"~"10",
                              site  == "C2"~ "1",
                              site == "RD"~"1"), 
        dilution = as.numeric(dilution)) 

dilution_redo<- site_redo%>%
  mutate(dilution = case_when(site == "BO"~"10",
                              site  == "C2"~ "1",
                              site == "RD"~"1"),
         dilution = as.numeric(dilution))



filter<- dilution %>%
   mutate(filter_amt = case_when(Sample == "BO_7"~"100",
                          Sample == "BO_8"~"100",
                          Sample == "BO_9"~"100",
                          Sample == "BO_9"~"100",
                          Sample == "BO_11"~"100",
                          Sample == "BO_12"~"50",
                          Sample == "BO_13"~"50",
                          Sample == "BO_14"~"50",
                          Sample == "BO_15"~"50",
                          Sample == "BO_16"~"30",
                          Sample == "BO_17"~"30",
                          Sample == "BO_18"~"30",
                          Sample == "BO_19"~"30",
                              site  == "C2"~ "100",
                              site == "RD"~"100"),
        filter_amt = as.numeric(filter_amt)) 

filter_redo<- dilution_redo %>%
   mutate(filter_amt = case_when(Sample == "BO_7"~"100",
                          Sample == "BO_8"~"100",
                          Sample == "BO_9"~"100",
                          Sample == "BO_9"~"100",
                          Sample == "BO_11"~"100",
                          Sample == "BO_12"~"50",
                          Sample == "BO_13"~"50",
                          Sample == "BO_14"~"50",
                          Sample == "BO_15"~"50",
                          Sample == "BO_16"~"30",
                          Sample == "BO_17"~"30",
                          Sample == "BO_18"~"30",
                          Sample == "BO_19"~"30",
                              site  == "C2"~ "100",
                              site == "RD"~"100"),
          filter_amt = as.numeric(filter_amt)) 
```


Cq --> Copies/mL
```{r}
copies<- filter %>%
   mutate(
   log_sq = ((Cq-37.606)/-3.409), #Equation of the line to get log(SQ). Equation is from Oyster STD Curve.
    sq = 10^log_sq, #Unlog 
    copies_rxn = sq*15, #SQ*Reaction Volume
    copies_uL_1_10 = copies_rxn/1.2, #Copies/RXN / DNA Template Volume
    copies_uL_extract = copies_uL_1_10 *dilution, #(Copies/uL of 1:10)*(1 if there was no sample dilution // *10 if there was a 1:10 dilution etc.)
    concentration_factor = 100/filter_amt, #(Concentration factor = amount of eluted DNA from ZYMO) / (filter amount from vacuum filtration)
    copies_mL = copies_uL_extract*concentration_factor) %>%
    
select(Sample,copies_mL,site,Fluor) %>%
  filter(Fluor%in%"HEX")

copies_redo<- filter_redo %>%
    mutate(
    log_sq = ((Cq-37.606)/-3.409), #Equation of the line to get log(SQ). Equation is from Oyster STD CUrve.
    sq = 10^log_sq, #Unlog 
    copies_rxn = sq*15, #SQ*Reaction Volume
    copies_uL_1_10 = copies_rxn/1.2, #Copies/RXN / DNA Template Volume
    copies_uL_extract = copies_uL_1_10 *dilution, #(Copies/uL of 1:10)*(1 if there was no sample dilution // *10 if there was a 1:10 dilution etc.)
    concentration_factor = 100/filter_amt, #(Concentration factor = amount of eluted DNA from ZYMO) / (filter amount from vacuum filtration)
    copies_mL = copies_uL_extract*concentration_factor) %>%
    
select(Sample,copies_mL, site)


```

Replace NaN with 0 for copies/mL
```{r}
replace<- copies %>% 
 mutate(copies_mL = ifelse(is.na(copies_mL), 0, copies_mL)) %>%
filter(!is.na(Sample))   #Dropping NAs from STD Curve 



replace_redo<- copies_redo %>%
 mutate(copies_mL = ifelse(is.na(copies_mL), 0, copies_mL)) %>%
filter(!is.na(Sample))   
 #Dropping NAs from STD Curve
```

Date Column
```{r}
date<- replace %>%
  mutate(day = substr(replace$Sample,4,5)) %>% #Creates new column `date` 
  mutate(date = case_when(day == "7"~"2022-07-07",
                         day ==  "8"~"2022-07-08",
                         day ==  "9"~"2022-07-09",
                         day ==  "11"~"2022-07-11",
                         day == "12"~"2022-07-12",
                         day ==  "13"~"2022-07-13",
                         day ==  "14"~"2022-07-14",
                         day ==  "15"~"2022-07-15",
                         day ==  "16"~"2022-07-16",
                         day == "17"~"2022-07-17",
                         day ==  "18"~"2022-07-18",
                         day == "19"~"2022-07-19"))
                          

date_redo<- replace_redo %>%
  mutate(day = substr(replace_redo$Sample,4,5)) %>% #Creates new column `date`
  mutate(date = case_when(day == "7"~"2022-07-07",
                         day ==  "8"~"2022-07-08",
                         day ==  "9"~"2022-07-09",
                         day ==  "11"~"2022-07-11",
                         day == "12"~"2022-07-12",
                         day ==  "13"~"2022-07-13",
                         day ==  "14"~"2022-07-14",
                         day ==  "15"~"2022-07-15",
                         day ==  "16"~"2022-07-16",
                         day == "17"~"2022-07-17",
                         day ==  "18"~"2022-07-18",
                         day == "19"~"2022-07-19"))


```



Take the average of qPCR triplicates 
```{r}
final<- date %>% 
  group_by(site, Sample,date) %>% #Group all chr together. All that should be left out is the numeric vector we want to work with (in this case, copies_mL)
  summarize_if(is.numeric, mean) %>%
  ungroup() %>% #Ungroup to spit everything back out 
  select(date,copies_mL,site)


final_redo<- date_redo %>% 
  group_by(site, Sample,date) %>% #Group all chr together. All that should be left out is the numeric vector we want to work with (in this case, copies_mL)
  summarize_if(is.numeric, mean) %>%
  ungroup() %>% #Ungroup to spit everything back out 
  select(date,copies_mL,site)
```

Save as RDS and manually add date in excel
```{r}
#stop() #Write error so it wont overwrite
write.csv(final, file= here("data","processed_data","vv_clean_copies.csv"))
write.csv(final_redo, file= here("data","processed_data","vv_clean_copies_redo.csv"))
```


_________________
Compare test
```{r}
SQ<- sq %>% 
  select(filter_amt,SQ,Cq, Sample, Fluor, dilution) %>%
  filter(Fluor %in% "HEX")

SQ_copies<- SQ %>%
    mutate(
   # log_sq = ((Cq-36.497)/-3.166), #Equation of the line to get log(SQ)
   # sq = 10^log_sq, #Unlog 
    copies_rxn = SQ*15, #SQ*Reaction Volume
    copies_uL_1_10 = copies_rxn/1.2, #Copies/RXN / DNA Template Volume
    copies_uL_extract = copies_uL_1_10 *dilution, #(Copies/uL of 1:10)*(1 if there was no sample dilution // *10 if there was a 1:10 dilution etc.)
    concentration_factor = 100/filter_amt, #(Concentration factor = amount of eluted DNA from ZYMO) / (filter amount from vacuum filtration)
    copies_mL = copies_uL_extract*concentration_factor) %>%
  select(Sample,copies_mL)


comp<-copies %>% filter(Fluor %in% "HEX")

  bind<- SQ_copies %>% cbind(x = comp$copies_mL) %>%
  select(x,copies_mL, Sample) %>%
  rename("Curve Copies" = "x",
         "Equation Copies" = "copies_mL")
```

```{r}
fig1<- bind %>% ggplot() +geom_boxplot(
  aes(
    x = Sample,
    y = `Equation Copies`),
  color = "darkblue") +
  theme_bw()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

fig2<- bind %>% ggplot() +geom_boxplot(
  aes(
    x = Sample,
    y = `Curve Copies`),
  color = "darkgreen") +
  theme_bw()+
  theme(axis.text.x = element_text(angle = 45, 
                                   hjust = 1))
  

ggarrange(fig1, fig2,
          ncol = 1,
          nrow= 2)

```

Cimpare Cq between OG and Redo
```{r}
#Deop NAs from +/- and lok at HEX
sq0<- sq %>%
  filter(
    !is.na(Sample),
    Fluor %in% "HEX")

redo0<- redo %>%
  filter(!is.na(Sample),
         Fluor %in% "HEX")

#copies0<- copies %>%
 # filter(!is.na(Sample))

#copies_redo0<- copies_redo %>%
 # filter(!is.na(Sample))

#Merge df
cq_comp<- 
  cbind(redo0, Cq_og= sq0$Cq) %>%
  #cbind(copies_redo0, copies_redo1 = sq0$copies_mL) %>%
 # cbind(copies0, copies_og1 = copies0$copies_mL) %>%
  select(Sample, Cq, Cq_og) %>%
  rename("Cq_redo" = "Cq")

```



